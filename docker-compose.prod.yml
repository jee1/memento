version: '3.8'

services:
  memento-prod:
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=production
      - DOCKER=true
      - DB_PATH=/app/data/memory.db
      - LOG_LEVEL=info
      - PORT=8080
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - EMBEDDING_PROVIDER=${EMBEDDING_PROVIDER:-lightweight}
      - GEMINI_MODEL=${GEMINI_MODEL:-text-embedding-004}
      - EMBEDDING_DIMENSIONS=${EMBEDDING_DIMENSIONS:-512}
      - MAX_CONNECTIONS=${MAX_CONNECTIONS:-1000}
      - CACHE_TTL=${CACHE_TTL:-300000}
      - CACHE_MAX_SIZE=${CACHE_MAX_SIZE:-1000}
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    restart: unless-stopped
    command: ["/app/start-container.sh"]
    stdin_open: true
    tty: true
    networks:
      - memento-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # 프로덕션용 Redis (캐싱)
  redis-prod:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_prod_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    networks:
      - memento-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx 리버스 프록시 (선택사항)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - memento-prod
    restart: unless-stopped
    networks:
      - memento-network

volumes:
  redis_prod_data:

networks:
  memento-network:
    driver: bridge
